;SIMULANDO DO WHILE
    ;  multiplicando = 3 (alterar valor na linha 17)
    ;  multiplicador = 5 (alterar valor na linha 23)
    ;  produto = 0
    ;  while(multiplicador > 0) {
    ;    resultado = resultado + multiplicando; 
    ;    multiplicador = multiplicador - 1; }
    
    ; base = 100 (0x64): endereço base dos operandos e tbm guarda o valor 0
    ; base + 4 (0x68): endereço de "multiplicando"
    ; base + 8 (0x6C): endereço de "multiplicador"
    ; base + 12 (0x70): endereço de "produto"


    addi $0, $0, 100 ; 0: $0 recebe 100 (0x64), endereço base dos operandos

    addi $1, $1, 3 ; 1: atribuindo um VALOR para "multiplicando" no $1

    sw $1, 4($0) ; 2: transf o VALOR de $1 para endereço de "multiplicando" (104 = 0x68)

    lw $1, 0($0) ; 3: zerando $1

    addi $1, $1, 5 ; 4: atribuindo um VALOR para "multiplicador" no $1

    sw $1, 8($0) ; 5: transf o VALOR de $1 para endereço de "multiplicador" (108 = 0x6C)

;verificando se "multiplicador" > 0:
    lw $1, 4($0) ; 6: busca VALOR de "multiplicando" da memória e atribui a $1

    lw $2, 8($0) ; 7: busca VALOR de "multiplicador" da memória e atribui a $2

    addi $3, $3, 1 ; 8: carrega o $3 com o valor 1

    LOOP: ; 9

        beq $2, $4, FINALIZAR ; 10: se $2(multiplicador) == $4(0), então pula para label FIM

        add $5, $5, $1; ; 11: $5 recebe a soma do "multiplicando". É o produto da multiplicação.

        sub $2, $2, $3; ; 12: decrementando em 1 o valor do "multiplicador"

    j LOOP ; 13                        

    FINALIZAR: ; 14

        sw $5, 12($0) ; 15: salva o valor do produto na memória

    FIM: ; 16: fim do programa com WHILE
    
    j FIM ; 17: loop infinito no final do programa